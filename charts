# Hitters Code
import matplotlib.pyplot as plt
import numpy as np

# Example data
labels = ['Season 1', 'Season 2', 'Season 3', 'Season 4']
a_drc = [109, 146, 134, 135]
b_drc = [112, 129, 112, 111]

x = np.arange(len(labels))  # the label locations
width = 0.35  # the width of the bars

# Create the figure and axes objects
fig, ax = plt.subplots()

# Plot the bars for men and women separately
rects1 = ax.bar(x - width/2, a_drc, width, label = 'Player A')
rects2 = ax.bar(x + width/2, b_drc, width, label = 'Player B')

# Add some text for labels, title and custom x-axis tick labels, etc.
ax.set_ylabel('DRC+(Deserved Runs Created +)')
ax.set_xlabel('Hitting Season')
ax.set_title('Hitter DRC+ by Year')
ax.set_xticks(x)
ax.set_xticklabels(labels)
ax.legend()

# Attach a text label above each bar displaying its height
def autolabel(rects):
    for rect in rects:
        height = rect.get_height()
        ax.annotate('{}'.format(height),
                    xy=(rect.get_x() + rect.get_width() / 2, height),
                    xytext=(0, 1),  # 3 points vertical offset
                    textcoords="offset points",
                    ha='center', va='bottom')

autolabel(rects1)
autolabel(rects2)

# Show the plot
plt.show()
----------------------------------------------
# Pitchers Code
import matplotlib.pyplot as plt
import numpy as np

# Example data
labels = ['Season 1', 'Season 2', 'Season 3', 'Season 4']
a_FIP = [3.2, 3.88, 3.78, 3.61]
b_FIP = [2.92, 3.41, 4.1, 4.39]

x = np.arange(len(labels))  # the label locations
width = 0.35  # the width of the bars

# Create the figure and axes objects
fig, ax = plt.subplots()

# Plot the bars for men and women separately
rects1 = ax.bar(x - width/2, a_FIP, width, label = 'Player A')
rects2 = ax.bar(x + width/2, b_FIP, width, label = 'Player B')

# Add some text for labels, title and custom x-axis tick labels, etc.
ax.set_ylabel('FIP (Fielding Independent Pitching)')
ax.set_xlabel('Pitching Season')
ax.set_title('Pitcher FIP by Year')
ax.set_xticks(x)
ax.set_xticklabels(labels)
ax.legend()

# Attach a text label above each bar displaying its height
def autolabel(rects):
    for rect in rects:
        height = rect.get_height()
        ax.annotate('{}'.format(height),
                    xy=(rect.get_x() + rect.get_width() / 2, height),
                    xytext=(0, 1),  # 3 points vertical offset
                    textcoords="offset points",
                    ha='center', va='bottom')

autolabel(rects1)
autolabel(rects2)

# Show the plot
plt.show()


